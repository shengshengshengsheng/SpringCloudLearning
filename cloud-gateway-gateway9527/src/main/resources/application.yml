server:
  port: 9527
spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      routes:
        - id: payment_routh #路由的ID，没有固定规则但要求唯一，建议配合服务名
#          uri: http://localhost:8001   #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service
          predicates:
            - Path=/payment/get/**   #断言,路径相匹配的进行路由

        - id: payment_routh2
#          uri: http://localhost:8001
          uri: lb://cloud-payment-service # 从注册中心利用微服务名称进行路由,需要注意的是uri的协议为lb，表示启用Gateway的负载均衡功能。lb://serviceName是spring cloud gateway在微服务中自动为我们创建的负载均衡uri
          predicates:
            - Path=/payment/getPort   #断言,路径相匹配的进行路由
#            - After=2021-06-04T15:13:14.316+08:00[Asia/Shanghai] # 配置该路由在指定时间之后生效
#            - Before=2021-06-20T15:13:14.316+08:00[Asia/Shanghai] # 配置该路由在指定时间之前生效
#            - Between=2021-06-04T15:13:14.316+08:00[Asia/Shanghai],2021-06-20T15:13:14.316+08:00[Asia/Shanghai] # 配置该路由在指定时间之间生效
#            - Cookie=username,zhangsan #配置需要Cookie，并且Cookie中包含username=zhangsan才可以访问
#            - Header=X-Request-Id, \d+ #请求头中要有X-Request-Id属性并且值为整数的正则表达式
#            - Host=**.shengsheng.com #指定的host才可以访问
#            - Method=GET # 指定的请求类型才可以访问
#            - Query=username, \d+ #要有参数名称并且是正整数才能路由

        - id: baidu # 跳转到百度的路由
          uri: http://news.baidu.com/guoji
          predicates:
            - Path=/guoji   #断言,路径相匹配的进行路由
      discovery:
        locator:
          enabled: true #开启从注册中心动态创建路由的功能，利用微服务名进行路由

eureka:
  instance:
    hostname: cloud-gateway-service
  client:
    service-url:
      register-with-eureka: true
      fetch-registry: true
      defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka